apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = GROUP
version = VERSION_NAME

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId GROUP
            artifactId ARTIFACT_NAME

            name BINTRAY_NAME
            description DESCRIPTION
            url SITE_URL

            licenses {
                license {
                    name LICENCE_NAME
                    url LICENCE_URL
                }
            }
            developers {
                developer {
                    id DEVELOPER_ID
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }
            scm {
                connection GIT_URL
                developerConnection GIT_URL
                url SITE_URL
            }
            def deps = configurations.compile.allDependencies + configurations.implementation.allDependencies
            deps.each {
                dependencies.add("compile", it)
            }
        }
    }
}

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    apply plugin: "org.jetbrains.dokka-android"
    task dokkaJavadoc(type: dokka.getClass()) {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from "$buildDir/javadoc"
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    apply plugin: "org.jetbrains.dokka"
    task dokkaJavadoc(type: dokka.getClass()) {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from "$buildDir/javadoc"
    }
}

bintrayUpload.dependsOn assemble
bintrayUpload.dependsOn sourcesJar
bintrayUpload.dependsOn javadocJar

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("BINTRAY_USER")
    key = properties.getProperty("BINTRAY_APIKEY")

    configurations = ['archives']
    pkg {
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        desc = DESCRIPTION
        websiteUrl = SITE_URL
        vcsUrl = GIT_URL
        licenses = project.property('LICENSES').split(',')
        dryRun = false
        publish = true
        override = false
        version {
            desc = DESCRIPTION
        }
    }
}